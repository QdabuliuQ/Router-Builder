#! /usr/bin/env node
global.navigator={userAgent:"node.js"};var fs=require("node:fs"),path=require("node:path"),prettier=require("prettier");function getDefaultExportFromCjs(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var styles={reset:"[0m",bright:"[1m",grey:"[2m",italic:"[3m",underline:"[4m",reverse:"[7m",hidden:"[8m",black:"[30m",red:"[31m",green:"[32m",yellow:"[33m",blue:"[34m",magenta:"[35m",cyan:"[36m",white:"[37m",blackBG:"[40m",redBG:"[41m",greenBG:"[42m",yellowBG:"[43m",blueBG:"[44m",magentaBG:"[45m",cyanBG:"[46m",whiteBG:"[47m"};function colors(e,t){var n="";return"string"==typeof e?n=styles[e]:e.forEach((e=>{n+=styles[e]})),n+t+styles.reset}var colorsConsole=colors,colors$1=getDefaultExportFromCjs(colorsConsole);const rootPath=process.cwd();function getFilesInfo(e){let t=fs.readdirSync(e);const n={};return t.forEach((function(t){const o=path.join(e,t),r=fs.statSync(o);n[t]={type:r.isFile()?"file":"dict",path:`\\${t}`,name:t,names:[...e.replace(`${rootPath}\\src\\views`,"").split("\\").filter(Boolean),t],fullPath:o}})),n}const ignoreKeys=new Set(["import","webpackChunkName","path","name"]);function conveyFunctionToString(e){for(const t in e)if(Object.hasOwnProperty.call(e,t)){if(ignoreKeys.has(t))continue;"function"==typeof e[t]?e[t]=`$$$${e[t].toString()}$$$`:e[t]&&"object"==typeof e[t]&&conveyFunctionToString(e[t])}return e}function importCode(e,t,n,o){return o?`$$$() => import( /* webpackChunkName: '${o}' */ '${n.importPrefix}/${e.length?e.join("/")+"/":""}${"<dictName>"===n.fileName?`${t}.vue`:"index"}.vue')$$$`:`$$$() => import('${n.importPrefix}/${e.length?e.join("/")+"/":""}${"<dictName>"===n.fileName?`${t}.vue`:"index"}.vue')$$$`}function dataType(e){let t=Object.prototype.toString.call(e).split(" ")[1];return t.substring(0,t.length-1).toLowerCase()}function getRouterConfig(content){const matches=[];let match;const reg=/<router>([\s\S]*?)<\/router>/g;for(;null!==(match=reg.exec(content));)matches.push(match[1]);if(matches.length){const params=matches.map((match=>eval(`(function(){return {${match}}})()`)));return params}return null}async function generateRouterConfig(e,t,n,o,r){let i=null;if(e){i=[];for(const a of e){if(conveyFunctionToString(a),a.import&&"object"===dataType(a.import)){for(const e in a.import)if(Object.prototype.hasOwnProperty.call(a.import,e)&&"array"===dataType(a.import[e])&&a.import[e].length){Object.prototype.hasOwnProperty.call(n,e)||(n[e]=new Map);for(const t of a.import[e])"string"===dataType(t)?n[e].set(t,t):"object"===dataType(t)&&(("string"===dataType(t.name)&&Object.prototype.hasOwnProperty.call(t,"alias")?"string"!==dataType(t.alias):Object.prototype.hasOwnProperty.call(t,"default")&&"boolean"!==dataType(t.default))||n[e].set(t.name,t))}delete a.import}const e=a.webpackChunkName;a.webpackChunkName&&delete a.webpackChunkName,i.push({...t,...a,component:importCode(o.names,o.name,r,e)})}}return i}async function generateRouterFile(e,t,n){const o=n.output.split("/").filter((e=>Boolean(e))),r=o.pop();let i=rootPath;for(const e of o){i+=`//${e}`;try{await fs.promises.access(i)}catch(e){await fs.promises.mkdir(i)}}const a=await prettier.format(generateRouterTemplate(e,t),{parser:"babel"});fs.promises.writeFile(`${i}//${r}`,a)}function generateRouterTemplate(e,t){return`\n${t}\nexport default ${e}  \n`}function isRegExp(e){return"[object RegExp]"===Object.prototype.toString.call(e)}async function readFileContent(e,t){try{const n=await fs.promises.readFile(`${e.fullPath}\\${"<dictName>"===t.fileName?e.name:"index"}.vue`,"utf-8");return getRouterConfig(n)}catch(e){return null}}async function readDictContent(e,t,n){const o=getFilesInfo(e.fullPath);if("{}"===JSON.stringify(o))return null;let r=null;if(o.hasOwnProperty("<dictName>"===n.fileName?`${e.name}.vue`:"index.vue")){const o={path:e.names.length?`/${e.names.join("/")}`:`/${e.name}`},i=await readFileContent(e,n),a=await generateRouterConfig(i,o,t,e,n);a&&(r=[...a])}e:for(const i in o){if(o["<dictName>"===n.fileName?`${e.name}.vue`:"index.vue"]===i)continue;if("file"===o[i].type)continue;for(const e of n.ignoreFolder)if("string"==typeof e||isRegExp(e)){if("string"==typeof e&&e===o[i].name)continue e;if(isRegExp(e)&&e.test(o[i].name))continue e}const a=await readDictContent(o[i],t,n);if(r)for(const e of r)e.children||(e.children=[]),a&&e.children.push(...a);else r=a}return r}function getImportCode(e){const t=[];if(!e)return"";for(const n in e)if(Object.prototype.hasOwnProperty.call(e,n)){const o=[];let r="";for(const[t,i]of e[n])if("string"===dataType(i))o.push(i);else if("object"===dataType(i)){const e=!i.default&&i.alias?`${i.name} as ${i.alias}`:`${i.name}`;i.default?r=e:o.push(e)}t.push(`import ${o.length&&""!==r?`${r},`:""} ${o.length?`{ ${o.join(",")} }`:""} from "${n}";`)}return t.join("")}let customConfig=null;try{customConfig=require(`${process.cwd()}\\router.config.js`)}catch(e){console.log(colors$1(["white","redBG"],"the router.config.js is no exist"))}!function(){if(!customConfig)return;const e={entry:"/src/views",output:"/src/router/router.js",importPrefix:"@/src/views",ignoreFolder:[],fileName:"index",...customConfig},t=process.cwd(),n=e.entry.split("/").filter(Boolean).join("\\");fs.existsSync(`${t}\\${n}`)?async function(){const o=getFilesInfo(`${t}\\${n}`),r=[],i={};for(const t in o)if(o.hasOwnProperty(t)&&"dict"===o[t].type){const n=await readDictContent(o[t],i,e);n&&r.push(...n)}generateRouterFile(JSON.stringify(r).replace(/"\$\$\$|\$\$\$"|\\r|\\n/g,""),getImportCode(i),e),console.log(colors$1(["white","greenBG"],"router file generation successful!"))}():console.log(colors$1(["white","redBG"],"the entry folder is no exist"))}();
